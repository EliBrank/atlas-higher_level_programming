===========================
2-matrix_divided.py doctest
===========================

Functions in 2-matrix_divided.py module: ``matrix_divided()``

Import
======

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Valid arguments
===============

``matrix_divided()``
Returns: new matrix with divided values
	>>> matrix_divided([[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]])
	3
	>>> matrix_divided(100, -2)
	98
	>>> matrix_divided(2)
	100
	>>> matrix_divided(100.3, -2)
	98

Invalid Arguments
=================

Non-numbers (types other than integers, floats) raise exceptions
	>>> add_integer(4, "School")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer
	>>> add_integer(None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer
	>>> add_integer(float('inf'), float('inf'))
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer
	>>> add_integer(float('NaN'), float('NaN'))
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer
